name: CI - Test, Coverage & Publish Docker Image

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage --coverageReporters="json-summary" --coverageReporters="text" --maxWorkers=2
        env:
          NODE_ENV: test
          CI: true

      - name: Extract coverage percentage
        id: coverage
        run: |
          COVERAGE=$(node -p "
            const coverage = require('./coverage/coverage-summary.json');
            Math.round(coverage.total.lines.pct);
          ")
          echo "COVERAGE=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"

      - name: Generate coverage badge
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: pomodoro-app-coverage.json
          label: Coverage
          message: ${{ steps.coverage.outputs.COVERAGE }}%
          valColorRange: ${{ steps.coverage.outputs.COVERAGE }}
          maxColorRange: 100
          minColorRange: 0

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const coverage = ${{ steps.coverage.outputs.COVERAGE }};
            const comment = `## üìä Test Coverage Report

            **Total Coverage:** ${coverage}%

            ${coverage >= 80 ? '‚úÖ Coverage threshold met!' : '‚ö†Ô∏è Coverage below 80% threshold'}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  publish_image:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: joshlehmandev
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: joshlehmandev/pomodoro-app:latest
          cache-from: type=registry,ref=joshlehmandev/pomodoro-app:latest
          cache-to: type=inline
